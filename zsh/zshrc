PATH=$HOME/bin:$PATH
export SSH_KEY_PATH="~/.ssh/rsa_id"

# most of promp stuff sits at man zshmisc
# keep doing source ~/.zshrc to see changes
# can we expand this to make it easier to read?
# do we need to use a % sign for unpriviledged prompts?
# why did UNIX use $ and now zsh uses %?
# colors: https://upload.wikimedia.org/wikipedia/commons/1/15/Xterm_256color_chart.svg
PROMPT='
%F{white}%B%n%b@%m %B%/%b
%B%F{green}%#%f%b '

export EDITOR=emacs
export VISUAL=emacs

# url-quote-magic module that automatically escapes URL characters
# https://github.com/johan/zsh/blob/master/Functions/Zle/url-quote-magic
autoload -Uz url-quote-magic
zle -N self-insert url-quote-magic
# As of zsh-5.1, the following may also be necessary in order to apply
# quoting to copy-pasted URLs:
autoload -Uz bracketed-paste-magic
zle -N bracketed-paste bracketed-paste-magic

alias l='ls'
alias ls='ls --color -F'
alias la='ls -la'
alias lat='la -t'
alias git=hub
alias ga='git add'
alias gc='git commit'
alias gs='git status'
alias vim=nvim
alias servidor='mosh --ssh="ssh -p 26" caioalonso'
alias update='sudo pacman -Syu'

# fixes keybindings
# will launch a config wizard the first time
autoload zkbd
[[ ! -f ${ZDOTDIR:-$HOME}/.zkbd/$TERM-${${DISPLAY:t}:-$VENDOR-$OSTYPE} ]] && zkbd
source ${ZDOTDIR:-$HOME}/.zkbd/$TERM-${${DISPLAY:t}:-$VENDOR-$OSTYPE}
[[ -n ${key[Backspace]} ]] && bindkey "${key[Backspace]}" backward-delete-char
[[ -n ${key[Insert]} ]] && bindkey "${key[Insert]}" overwrite-mode
[[ -n ${key[Home]} ]] && bindkey "${key[Home]}" beginning-of-line
[[ -n ${key[PageUp]} ]] && bindkey "${key[PageUp]}" up-line-or-history
[[ -n ${key[Delete]} ]] && bindkey "${key[Delete]}" delete-char
[[ -n ${key[End]} ]] && bindkey "${key[End]}" end-of-line
[[ -n ${key[PageDown]} ]] && bindkey "${key[PageDown]}" down-line-or-history
[[ -n ${key[Up]} ]] && bindkey "${key[Up]}" up-line-or-search
[[ -n ${key[Left]} ]] && bindkey "${key[Left]}" backward-char
[[ -n ${key[Down]} ]] && bindkey "${key[Down]}" down-line-or-search
[[ -n ${key[Right]} ]] && bindkey "${key[Right]}" forward-char

eval "$(direnv hook zsh)"
